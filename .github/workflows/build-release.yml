# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path
# optional
name: Build For Release

on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
        type: choice
        options:
          - debug
          - info
          - warning
          - error
jobs:
  build-webUi:
    name: WebUi Release
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Cache Node.js modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-    

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Clone NyxBot-WebUI repository
        run: git clone https://github.com/KingPrimes/NyxBot-WebUI.git

      - name: Cache pnpm modules
        id: cache-pnpm-modules
        uses: actions/cache@v3
        with:
          path: ./NyxBot-WebUI/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('NyxBot-WebUI/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Build NyxBot-WebUI with pnpm
        working-directory: ./NyxBot-WebUI
        if: steps.cache-pnpm-modules.outputs.cache-hit != 'true'
        run: |
          pnpm install
          pnpm run build 

      - name: Cache WebUi Build Artifact
        uses: actions/cache@v3
        with:
          path: NyxBot-WebUI/dist
          key: ${{ runner.os }}-webui-build-${{ hashFiles('NyxBot-WebUI/**') }}
          restore-keys: |
            ${{ runner.os }}-webui-build-

      - name: Upload WebUi Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: webui-build
          path: NyxBot-WebUI/resources

  build-release:
    name: Release
    needs: build-webui
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Download WebUi Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: webui-build
          path: ./webui-build

      - name: Display structure of downloaded files
        run: ls -R ./webui-build

      - name: Merge built resources into current project
        run: |
          cp -r ./webui-build/resources/* src/main/resources/

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Upload JAR to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          file: target/NyxBot.jar
          asset-name: application.jar
          tag: ${{ github.ref }}
          overwrite: true
          draft: true

  build-docker:
    name: Docker
    needs: build-webui
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Download WebUi Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: webui-build
          path: ./webui-build

      - name: Merge built resources into current project
        run: |
          cp -r ./webui-build/resources/* src/main/resources/

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Copy File
        run: cp target/NyxBot.jar ./

      - name: Build and push
        run: |
          docker build -t kingprimes/nyxbot:latest .
          docker push kingprimes/nyxbot:latest